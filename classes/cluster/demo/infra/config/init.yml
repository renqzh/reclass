classes:
- system.linux.system.repo_local.mcp.salt
- system.linux.system.repo.mcp.extra
- system.linux.system.repo.mcp.apt_mirantis.openstack
- system.linux.system.repo.mcp.apt_mirantis.ubuntu
- system.linux.system.repo.mcp.apt_mirantis.glusterfs

- system.glusterfs.client.cluster
- system.glusterfs.client.volume.salt_pki
- system.salt.minion.ca.salt_master
- system.salt.master.single
- system.salt.master.api
- system.reclass.storage.salt
- system.salt.master.pillar.composite.reclass
- system.reclass.storage.system.physical_control_cluster
- system.reclass.storage.system.openstack_gateway_cluster
- system.reclass.storage.system.openstack_control_cluster
- system.reclass.storage.system.openstack_proxy_cluster
- system.reclass.storage.system.openstack_database_cluster
- system.reclass.storage.system.openstack_message_queue_cluster
#- system.reclass.storage.system.openstack_baremetal_cluster
- system.salt.master.formula.pkg.baremetal
#- system.reclass.storage.system.openstack_benchmark_single
#- system.reclass.storage.system.openstack_control_upgrade_single
#- system.reclas.storage.system.stacklight_log_cluster
#- system.reclass.storage.system.stacklight_telemetry_cluster
#- system.reclass.storage.system.stacklightv2_server_cluster
- system.reclass.storage.system.cicd_control_cluster
#- system.reclass.storage.system.ceph_mon_cluster
#- system.reclass.storage.system.ceph_rgw_cluster
- service.jenkins.client
- system.jenkins.client.credential.salt
- system.jenkins.client.job.deploy.openstack
- cluster.demo.infra.maas
- cluster.demo.infra.salt_master_formulas
- cluster.demo.infra
- cluster.demo.infra.backup.client_common
- cluster.demo.infra.networking.config
- cluster.demo.infra.config.nodes
parameters:
  _param:
    salt_master_base_environment: prd
    reclass_data_repository: "https://github.com/Mirantis/mk-lab-salt-model.git"
    reclass_data_revision: master
    reclass_config_master: ${_param:infra_config_deploy_address}
    single_address: ${_param:infra_config_address}
    deploy_address: ${_param:infra_config_deploy_address}
    linux_system_codename: xenial
    salt_api_password_hash: "$6$Jbtefbna$p6WQJhouiIeMzuC4HLsbNFM4.YHI37aTN1L6xKgpoT/ftJuNHfa.JrMCi3B/By./j5xuCjDsOE47Oz0HQMKFl."
    salt_master_host: ${_param:infra_config_deploy_address}
    jenkins_git_url: 'git@cfg01:/home/repo'
    jenkins_gerrit_url: ${_param:jenkins_git_url}
    salt_api_password: xaUGdRIZ7EecZbkQ5T8LhnHu8IimcKCj
    jenkins_salt_api_url: "http://${_param:salt_master_host}:6969"
    jenkins_pipeline_library_url: git@cfg01:/home/repo/mcp-ci/pipeline-library
    http_proxy_address: ""
    http_proxy_port: ""
    http_proxy: ""
  jenkins:
    client:
      lib:
        pipeline-library:
          url: ${_param:jenkins_pipeline_library_url}
          branch: ${_param:jenkins_pipelines_branch}
      master:
        host: ${_param:salt_master_host}
        port: 8081
        password: r00tme
      globalenvprop:
        OFFLINE_DEPLOYMENT:
          value: "true"
  salt:
    master:
      command_timeout: 600
      user:
        deploy:
          permissions: ${_param:salt_master_api_permissions}
      backup: true
    minion:
      backup: true
# FIXME: This WA should be removed, after qemu\kvm\stacklight\etc system
# packages will be splitted from openstack repo. PROD-21270
  linux:
    system:
      repo:
        mcp_maas:
          pin:
          # Explicity pin python3-django to Ubuntu-upstream repo, instead one
          # from openstack repo. PROD-19812
          - pin: 'release o=Ubuntu'
            priority: 1110
            package: 'python3-django'

